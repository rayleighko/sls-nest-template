service: sls-nest-template

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-jetpack

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage,'dev'}
  region: ap-northeast-2
  timeout: 30
  apiGateway: 
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
    shouldStartNameWithService: true
    binaryMediaTypes:
      - '*/*'
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    STAGE: ${self:provider.stage}
  tracing:
    apiGateway: true
    lambda: true
    
package:
  individually: true

functions:
  main:
    handler: dist/lambda.handler
    # vpc:
    #   securityGroupIds:
    #     - "sg-xxxxxxxxxxx"
    #   subnetIds:
    #     - "subnet-xxxxxxxxxxx"
    #     - "subnet-xxxxxxxxxxx"
    events:
      - http:
          method: ANY
          path: /
          cors: true
      - http:
          method: ANY
          path: '{proxy+}'
          cors: true
          
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
    GatewayResponseDefault5XX:
      Type: "AWS::ApiGateway::GatewayResponse"
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: "ApiGatewayRestApi"
